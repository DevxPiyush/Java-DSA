Binary Search - only for sorted arraysorted - in any order be ascending or descending maybetake the middle index of the arraycompare the middle with the target elementif target > middlethen, traverse at the right of the arrayif target < middlethen, traverse the left side of the arrayComplexity Analysis1. Best Case : O(1) - mid = target2. Worst Case : O(logN) = n = number of comparisonsWhen to apply binary search?-> When we have a sorted array, then try binary searchAgar humare pass binary search hai toh why we need agnostic binary search algorithm?answer : The standard binary search assumes that the array is sorted in ascending order.But what if:- You're given an array that is sorted in descending order?- Or, you don’t know the sorting order beforehand?- If you apply regular binary search assuming ascending order, it will fail or return wrong results for descending arrays✅ What is Order-Agnostic Binary Search?Order-agnostic binary search is a modified binary search that works regardless of whether the array is sorted in ascending or descending order.It first checks the order of the array and then performs binary search accordingly.Use order-agnostic binary search when:You are not sure of the array's orderYou want a reusable binary search logic for both sorted directions